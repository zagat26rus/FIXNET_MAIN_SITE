import React, { useState, useEffect } from 'react';
import './App.css';
import axios from 'axios';

const BACKEND_URL = process.env.REACT_APP_BACKEND_URL;
const API = `${BACKEND_URL}/api`;

function App() {
  const [currentSection, setCurrentSection] = useState('home');
  const [diagnosticResult, setDiagnosticResult] = useState(null);
  const [priceEstimate, setPriceEstimate] = useState(null);
  const [isLoading, setIsLoading] = useState(false);
  
  // Form states
  const [diagnosticForm, setDiagnosticForm] = useState({
    problem_description: ''
  });
  
  const [priceForm, setPriceForm] = useState({
    brand: '',
    model: '',
    problem: ''
  });
  
  const [requestForm, setRequestForm] = useState({
    name: '',
    contact: '',
    device_brand: '',
    device_model: '',
    problem_description: '',
    estimated_price: ''
  });

  const brands = ['Apple', 'Samsung', 'Xiaomi', 'Huawei', 'OnePlus', 'Oppo', 'Vivo', '–î—Ä—É–≥–∏–µ'];

  // Handle diagnostic
  const handleDiagnostic = async (e) => {
    e.preventDefault();
    setIsLoading(true);
    try {
      const response = await axios.post(`${API}/diagnostic`, diagnosticForm);
      setDiagnosticResult(response.data);
    } catch (error) {
      console.error('Diagnostic error:', error);
    } finally {
      setIsLoading(false);
    }
  };

  // Handle price estimation
  const handlePriceEstimate = async (e) => {
    e.preventDefault();
    setIsLoading(true);
    try {
      const response = await axios.post(`${API}/price-estimate`, priceForm);
      setPriceEstimate(response.data);
    } catch (error) {
      console.error('Price estimate error:', error);
    } finally {
      setIsLoading(false);
    }
  };

  // Handle repair request
  const handleRepairRequest = async (e) => {
    e.preventDefault();
    setIsLoading(true);
    try {
      const response = await axios.post(`${API}/repair-request`, requestForm);
      alert('–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
      setRequestForm({
        name: '',
        contact: '',
        device_brand: '',
        device_model: '',
        problem_description: '',
        estimated_price: ''
      });
    } catch (error) {
      console.error('Repair request error:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    } finally {
      setIsLoading(false);
    }
  };

  // Navigation handler
  const scrollToSection = (sectionId) => {
    const element = document.getElementById(sectionId);
    if (element) {
      element.scrollIntoView({ behavior: 'smooth' });
    }
    setCurrentSection(sectionId);
  };

  return (
    <div className="App">
      {/* Navigation */}
      <nav className="fixed top-0 w-full bg-white shadow-lg z-50">
        <div className="container mx-auto px-4 py-3">
          <div className="flex justify-between items-center">
            <div className="text-2xl font-bold text-blue-900">FixNet</div>
            <div className="hidden md:flex space-x-6">
              <button onClick={() => scrollToSection('home')} className="text-gray-700 hover:text-blue-600">–ì–ª–∞–≤–Ω–∞—è</button>
              <button onClick={() => scrollToSection('about')} className="text-gray-700 hover:text-blue-600">–û –Ω–∞—Å</button>
              <button onClick={() => scrollToSection('assistant')} className="text-gray-700 hover:text-blue-600">–ü–æ–º–æ—â–Ω–∏–∫</button>
              <button onClick={() => scrollToSection('calculator')} className="text-gray-700 hover:text-blue-600">–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä</button>
              <button onClick={() => scrollToSection('request')} className="text-gray-700 hover:text-blue-600">–ó–∞—è–≤–∫–∞</button>
            </div>
          </div>
        </div>
      </nav>

      {/* Hero Section */}
      <section id="home" className="hero-section">
        <div className="hero-overlay">
          <div className="container mx-auto px-4 py-20">
            <div className="text-center text-white">
              <h1 className="text-5xl md:text-6xl font-bold mb-6 animate-fade-in">
                FixNet ‚Äî —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω–∞—è —Å–µ—Ç—å —Å–µ—Ä–≤–∏—Å–Ω—ã—Ö —Ü–µ–Ω—Ç—Ä–æ–≤
              </h1>
              <p className="text-xl md:text-2xl mb-4 animate-fade-in-delay">
                –î–æ–≤–µ—Ä–∏–µ. –ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å. –ö–∞—á–µ—Å—Ç–≤–æ.
              </p>
              <p className="text-lg mb-8 animate-fade-in-delay-2">
                –ö–æ–≥–¥–∞ –≤–∞–∂–Ω–æ, —á—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞–ª–æ.
              </p>
              <button 
                onClick={() => scrollToSection('request')}
                className="bg-yellow-400 text-blue-900 px-8 py-4 rounded-lg text-lg font-semibold hover:bg-yellow-300 transition-all transform hover:scale-105 animate-fade-in-delay-3"
              >
                –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Ä–µ–º–æ–Ω—Ç
              </button>
            </div>
          </div>
        </div>
      </section>

      {/* About Section */}
      <section id="about" className="py-20 bg-gray-50">
        <div className="container mx-auto px-4">
          <div className="text-center mb-16">
            <h2 className="text-4xl font-bold text-blue-900 mb-6">–û –Ω–∞—Å</h2>
            <p className="text-xl text-gray-700 max-w-3xl mx-auto">
              FixNet ‚Äî –±—É–¥—É—â–∏–π –ª–∏–¥–µ—Ä —Ä—ã–Ω–∫–∞ –ø–æ —Ä–µ–º–æ–Ω—Ç—É –º–æ–±–∏–ª—å–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–∏. 
              –ù–∞—à–∞ –º–∏—Å—Å–∏—è ‚Äî —Å–¥–µ–ª–∞—Ç—å —Ä–µ–º–æ–Ω—Ç –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–º –∏ —á–µ—Å—Ç–Ω—ã–º.
            </p>
          </div>
          
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
            <div className="bg-white p-8 rounded-lg shadow-lg hover:shadow-xl transition-shadow">
              <div className="text-blue-600 text-4xl mb-4">üèÜ</div>
              <h3 className="text-xl font-semibold mb-4">–°—Ç–∞–Ω–¥–∞—Ä—Ç—ã –∫–∞—á–µ—Å—Ç–≤–∞</h3>
              <p className="text-gray-600">–ï–¥–∏–Ω—ã–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –≤–æ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–Ω—ã—Ö —Ü–µ–Ω—Ç—Ä–∞—Ö —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏</p>
            </div>
            
            <div className="bg-white p-8 rounded-lg shadow-lg hover:shadow-xl transition-shadow">
              <div className="text-blue-600 text-4xl mb-4">‚úÖ</div>
              <h3 className="text-xl font-semibold mb-4">–ì–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ –∫–∞–∂–¥—ã–π —Ä–µ–º–æ–Ω—Ç</h3>
              <p className="text-gray-600">–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ –≤—Å–µ –≤–∏–¥—ã —Ä–µ–º–æ–Ω—Ç–Ω—ã—Ö —Ä–∞–±–æ—Ç —Å –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏</p>
            </div>
            
            <div className="bg-white p-8 rounded-lg shadow-lg hover:shadow-xl transition-shadow">
              <div className="text-blue-600 text-4xl mb-4">ü§ñ</div>
              <h3 className="text-xl font-semibold mb-4">–£–º–Ω—ã–π –æ–Ω–ª–∞–π–Ω-–ø–æ–º–æ—â–Ω–∏–∫</h3>
              <p className="text-gray-600">–ò–ò-–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º –∏ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ä–µ–º–æ–Ω—Ç–∞</p>
            </div>
            
            <div className="bg-white p-8 rounded-lg shadow-lg hover:shadow-xl transition-shadow">
              <div className="text-blue-600 text-4xl mb-4">üì±</div>
              <h3 className="text-xl font-semibold mb-4">–£–¥–æ–±–Ω–æ –≤–µ–∑–¥–µ</h3>
              <p className="text-gray-600">Telegram, —Å–∞–π—Ç, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ‚Äî –æ—Ñ–æ—Ä–º–ª—è–π—Ç–µ –∑–∞—è–≤–∫–∏ —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º</p>
            </div>
            
            <div className="bg-white p-8 rounded-lg shadow-lg hover:shadow-xl transition-shadow">
              <div className="text-blue-600 text-4xl mb-4">üöÄ</div>
              <h3 className="text-xl font-semibold mb-4">–§—Ä–∞–Ω—á–∞–π–∑–∏–Ω–≥–æ–≤–∞—è –º–æ–¥–µ–ª—å</h3>
              <p className="text-gray-600">–ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–∞—è –±–∏–∑–Ω–µ—Å-–º–æ–¥–µ–ª—å –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏</p>
            </div>
            
            <div className="bg-white p-8 rounded-lg shadow-lg hover:shadow-xl transition-shadow">
              <div className="text-blue-600 text-4xl mb-4">üíé</div>
              <h3 className="text-xl font-semibold mb-4">–ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å</h3>
              <p className="text-gray-600">–ß–µ—Å—Ç–Ω—ã–µ —Ü–µ–Ω—ã, –ø–æ–¥—Ä–æ–±–Ω—ã–µ –æ—Ç—á–µ—Ç—ã –æ –ø—Ä–æ–¥–µ–ª–∞–Ω–Ω–æ–π —Ä–∞–±–æ—Ç–µ</p>
            </div>
          </div>
          
          <div className="text-center mt-16">
            <div className="flex justify-center space-x-6">
              <a href="#" className="text-blue-600 hover:text-blue-800 text-2xl">üìß</a>
              <a href="#" className="text-blue-600 hover:text-blue-800 text-2xl">üì±</a>
              <a href="#" className="text-blue-600 hover:text-blue-800 text-2xl">üì∑</a>
            </div>
          </div>
        </div>
      </section>

      {/* AI Assistant Section */}
      <section id="assistant" className="py-20 bg-white">
        <div className="container mx-auto px-4">
          <div className="text-center mb-16">
            <h2 className="text-4xl font-bold text-blue-900 mb-6">–û–Ω–ª–∞–π–Ω –ø–æ–º–æ—â–Ω–∏–∫</h2>
            <p className="text-xl text-gray-700">
              –û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É, –º—ã –ø–æ–º–æ–∂–µ–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—å
            </p>
          </div>
          
          <div className="max-w-2xl mx-auto">
            <form onSubmit={handleDiagnostic} className="bg-gray-50 p-8 rounded-lg shadow-lg">
              <div className="mb-6">
                <label className="block text-gray-700 text-sm font-bold mb-2">
                  –û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º:
                </label>
                <textarea
                  value={diagnosticForm.problem_description}
                  onChange={(e) => setDiagnosticForm({...diagnosticForm, problem_description: e.target.value})}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500"
                  rows="4"
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: —ç–∫—Ä–∞–Ω —Ç—Ä–µ—Å–Ω—É–ª, –±—ã—Å—Ç—Ä–æ —Ä–∞–∑—Ä—è–∂–∞–µ—Ç—Å—è –±–∞—Ç–∞—Ä–µ—è, –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∑–≤—É–∫..."
                  required
                />
              </div>
              
              <button
                type="submit"
                disabled={isLoading}
                className="w-full bg-blue-600 text-white py-3 px-6 rounded-lg font-semibold hover:bg-blue-700 transition-colors disabled:opacity-50"
              >
                {isLoading ? '–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º...' : '–ü–æ–ª—É—á–∏—Ç—å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É'}
              </button>
            </form>
            
            {diagnosticResult && (
              <div className="mt-8 bg-blue-50 p-6 rounded-lg border-l-4 border-blue-500">
                <h3 className="text-lg font-semibold text-blue-900 mb-2">
                  –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: {diagnosticResult.category}
                </h3>
                <p className="text-gray-700 mb-4">{diagnosticResult.description}</p>
                <p className="text-blue-800 font-medium">{diagnosticResult.recommendation}</p>
                <button
                  onClick={() => scrollToSection('request')}
                  className="mt-4 bg-yellow-400 text-blue-900 px-6 py-2 rounded-lg font-semibold hover:bg-yellow-300 transition-colors"
                >
                  –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É
                </button>
              </div>
            )}
          </div>
        </div>
      </section>

      {/* Price Calculator Section */}
      <section id="calculator" className="py-20 bg-gray-50">
        <div className="container mx-auto px-4">
          <div className="text-center mb-16">
            <h2 className="text-4xl font-bold text-blue-900 mb-6">–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ä–µ–º–æ–Ω—Ç</h2>
            <p className="text-xl text-gray-700">
              –£–∑–Ω–∞–π—Ç–µ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–µ–º–æ–Ω—Ç–∞ –≤–∞—à–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
            </p>
          </div>
          
          <div className="max-w-2xl mx-auto">
            <form onSubmit={handlePriceEstimate} className="bg-white p-8 rounded-lg shadow-lg">
              <div className="grid md:grid-cols-2 gap-6 mb-6">
                <div>
                  <label className="block text-gray-700 text-sm font-bold mb-2">
                    –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å:
                  </label>
                  <select
                    value={priceForm.brand}
                    onChange={(e) => setPriceForm({...priceForm, brand: e.target.value})}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500"
                    required
                  >
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è</option>
                    {brands.map(brand => (
                      <option key={brand} value={brand}>{brand}</option>
                    ))}
                  </select>
                </div>
                
                <div>
                  <label className="block text-gray-700 text-sm font-bold mb-2">
                    –ú–æ–¥–µ–ª—å:
                  </label>
                  <input
                    type="text"
                    value={priceForm.model}
                    onChange={(e) => setPriceForm({...priceForm, model: e.target.value})}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500"
                    placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: iPhone 14, Galaxy S23"
                    required
                  />
                </div>
              </div>
              
              <div className="mb-6">
                <label className="block text-gray-700 text-sm font-bold mb-2">
                  –ü—Ä–æ–±–ª–µ–º–∞:
                </label>
                <input
                  type="text"
                  value={priceForm.problem}
                  onChange={(e) => setPriceForm({...priceForm, problem: e.target.value})}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500"
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –∑–∞–º–µ–Ω–∞ —ç–∫—Ä–∞–Ω–∞, –∑–∞–º–µ–Ω–∞ –±–∞—Ç–∞—Ä–µ–∏"
                  required
                />
              </div>
              
              <button
                type="submit"
                disabled={isLoading}
                className="w-full bg-blue-600 text-white py-3 px-6 rounded-lg font-semibold hover:bg-blue-700 transition-colors disabled:opacity-50"
              >
                {isLoading ? '–†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º...' : '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å'}
              </button>
            </form>
            
            {priceEstimate && (
              <div className="mt-8 bg-green-50 p-6 rounded-lg border-l-4 border-green-500">
                <h3 className="text-lg font-semibold text-green-900 mb-2">
                  –û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {priceEstimate.estimated_price}
                </h3>
                <p className="text-gray-700 mb-4">{priceEstimate.description}</p>
                <button
                  onClick={() => {
                    setRequestForm({
                      ...requestForm,
                      device_brand: priceForm.brand,
                      device_model: priceForm.model,
                      problem_description: priceForm.problem,
                      estimated_price: priceEstimate.estimated_price
                    });
                    scrollToSection('request');
                  }}
                  className="bg-yellow-400 text-blue-900 px-6 py-2 rounded-lg font-semibold hover:bg-yellow-300 transition-colors"
                >
                  –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É
                </button>
              </div>
            )}
          </div>
        </div>
      </section>

      {/* Repair Request Section */}
      <section id="request" className="py-20 bg-white">
        <div className="container mx-auto px-4">
          <div className="text-center mb-16">
            <h2 className="text-4xl font-bold text-blue-900 mb-6">–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É</h2>
            <p className="text-xl text-gray-700">
              –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è
            </p>
          </div>
          
          <div className="max-w-2xl mx-auto">
            <form onSubmit={handleRepairRequest} className="bg-gray-50 p-8 rounded-lg shadow-lg">
              <div className="grid md:grid-cols-2 gap-6 mb-6">
                <div>
                  <label className="block text-gray-700 text-sm font-bold mb-2">
                    –í–∞—à–µ –∏–º—è:
                  </label>
                  <input
                    type="text"
                    value={requestForm.name}
                    onChange={(e) => setRequestForm({...requestForm, name: e.target.value})}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500"
                    required
                  />
                </div>
                
                <div>
                  <label className="block text-gray-700 text-sm font-bold mb-2">
                    –¢–µ–ª–µ—Ñ–æ–Ω/Email:
                  </label>
                  <input
                    type="text"
                    value={requestForm.contact}
                    onChange={(e) => setRequestForm({...requestForm, contact: e.target.value})}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500"
                    placeholder="+7 (999) 123-45-67 –∏–ª–∏ email@example.com"
                    required
                  />
                </div>
              </div>
              
              <div className="grid md:grid-cols-2 gap-6 mb-6">
                <div>
                  <label className="block text-gray-700 text-sm font-bold mb-2">
                    –ë—Ä–µ–Ω–¥ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:
                  </label>
                  <select
                    value={requestForm.device_brand}
                    onChange={(e) => setRequestForm({...requestForm, device_brand: e.target.value})}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500"
                    required
                  >
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –±—Ä–µ–Ω–¥</option>
                    {brands.map(brand => (
                      <option key={brand} value={brand}>{brand}</option>
                    ))}
                  </select>
                </div>
                
                <div>
                  <label className="block text-gray-700 text-sm font-bold mb-2">
                    –ú–æ–¥–µ–ª—å:
                  </label>
                  <input
                    type="text"
                    value={requestForm.device_model}
                    onChange={(e) => setRequestForm({...requestForm, device_model: e.target.value})}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500"
                    placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: iPhone 14 Pro"
                    required
                  />
                </div>
              </div>
              
              <div className="mb-6">
                <label className="block text-gray-700 text-sm font-bold mb-2">
                  –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã:
                </label>
                <textarea
                  value={requestForm.problem_description}
                  onChange={(e) => setRequestForm({...requestForm, problem_description: e.target.value})}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500"
                  rows="4"
                  placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º..."
                  required
                />
              </div>
              
              {requestForm.estimated_price && (
                <div className="mb-6">
                  <label className="block text-gray-700 text-sm font-bold mb-2">
                    –û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:
                  </label>
                  <input
                    type="text"
                    value={requestForm.estimated_price}
                    onChange={(e) => setRequestForm({...requestForm, estimated_price: e.target.value})}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-100"
                    readOnly
                  />
                </div>
              )}
              
              <button
                type="submit"
                disabled={isLoading}
                className="w-full bg-blue-600 text-white py-3 px-6 rounded-lg font-semibold hover:bg-blue-700 transition-colors disabled:opacity-50"
              >
                {isLoading ? '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É'}
              </button>
            </form>
          </div>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-blue-900 text-white py-12">
        <div className="container mx-auto px-4">
          <div className="text-center">
            <div className="text-3xl font-bold mb-4">FixNet</div>
            <p className="text-blue-200 mb-6">–ö–æ–≥–¥–∞ –≤–∞–∂–Ω–æ, —á—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞–ª–æ.</p>
            <div className="flex justify-center space-x-6 mb-8">
              <a href="#" className="text-blue-300 hover:text-white">üìß Email</a>
              <a href="#" className="text-blue-300 hover:text-white">üì± Telegram</a>
              <a href="#" className="text-blue-300 hover:text-white">üì∑ Instagram</a>
            </div>
            <p className="text-blue-300 text-sm">
              ¬© 2024 FixNet. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.
            </p>
          </div>
        </div>
      </footer>
    </div>
  );
}

export default App;